@model WebDT.Models.RegisterModel
@{
    ViewBag.Title = "Đăng ký";
    Layout = "~/Views/Shared/_MyLayout.cshtml";
}

<div class="content">
    @using (Html.BeginForm("DangKy", "TaiKhoan", FormMethod.Post, new { id = "frmValidate" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <h4 style="margin-top: 20px; margin-left:45%"> <b>Đăng ký thành viên</b> </h4>
            <hr />
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @if (ViewBag.Success != null)
                {
                    <div class="alert alert-success"><p style="margin-left: 45%">@ViewBag.Success</p></div>
                }
            </div>
            <div class="form-group" style="margin-left:25%">
                @Html.LabelFor(model => model.username, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.username, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="margin-left:25%">
                @Html.LabelFor(model => model.password, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.password, new { @class = "form-control", id = "password" })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="margin-left:25%">
                @Html.LabelFor(model => model.confirmpassword, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.confirmpassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.confirmpassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="margin-left:25%">
                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="margin-left:25%">
                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="margin-left:25%">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="margin-left:25%">
                @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.phone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="margin-left:25%">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Đăng ký" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>


@section jsFooter{


    <script>
        $(document).ready(function () {

            // add the rule here

            jQuery.validator.addMethod("phonenu", function (value, element) {
                if (/^(09[0-9]|07[0|6|7|8|9]|03[2-9]|08[1-5])+([0-9]{7})\b/g.test(value)) {
                    return true;
                } else {
                    return false;
                };
            }, "Invalid phone number");

            jQuery.validator.addMethod("email_regex", function (value, element) {
                if (/^[a-z][a-z0-9_\.]{5,32}@@[a-z0-9]{2,}(\.[a-z0-9]{2,4}){1,2}$/g.test(value)) {
                    return true;
                } else {
                    return false;
                };
            }, "Invalid email");
            //Khi bàn phím được nhấn và thả ra thì sẽ chạy phương thức này
            $("#frmValidate").validate({
                rules: {
                    username: "required",
                    password: "required",
                    name: "required",
                    address: "required",
                    confirmpassword: {
                        required: true,
                        equalTo: "#password"
                    },
                    email: {
                        required: true,
                        email_regex: true
                    },
                    phone: {
                        required: true,
                        phonenu: true
                    }
                },
                messages: {
                    username: "Vui lòng nhập tài khoản",
                    password: "Vui lòng nhập mật khẩu",
                    name: "Vui lòng nhập họ và tên",
                    address: "Vui lòng nhập địa chỉ",
                    confirmpassword: {
                        required: "Vui lòng nhập lại mật khẩu",
                        equalTo: "Mật khẩu không khớp"
                    },
                    email: {
                        required: "Vui lòng nhập email",
                        email_regex: "Email không hợp lệ"
                    },
                    phone: {
                        required: "Vui lòng nhập số điện thoại",
                        phonenu: "Số điện thoại không hợp lệ"
                    }
                }
            });
        });
    </script>
}

